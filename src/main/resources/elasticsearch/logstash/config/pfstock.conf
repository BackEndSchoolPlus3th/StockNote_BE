input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-j-9.2.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://43.203.126.129:3306/default_db"
    jdbc_user => "root"
    jdbc_password => "1234"
    schedule => "*/10 * * * * *"
    sql_log_level => "debug"
    tracking_column => "id"
    use_column_value => true
    record_last_run => true
    last_run_metadata_path => "/usr/share/logstash/metadata/pfstock_last_run"
    statement => "
      SELECT
        pfs.id,
        pfs.pfstock_count,
        pfs.pfstock_price,
        pfs.pfstock_total_price,
        pfs.current_price,
        pfs.idx_bztp_scls_cd_name,
        p.member_id,
        JSON_OBJECT(
          'code', s.code,
          'name', s.name,
          'market', s.market
        ) as stock_doc
      FROM pf_stock pfs
      JOIN portfolio p ON pfs.portfolio_id = p.id
      JOIN stock s ON pfs.stock_code = s.code"
    type => "pfstock"
    clean_run => false
    jdbc_validate_connection => true
  }
}

filter {
  if [type] == "pfstock" {
    mutate {
      remove_field => ["@version", "@timestamp", "jdbc_connection_string", "jdbc_user", "jdbc_password"]

      convert => {
        "pfstock_count" => "integer"
        "pfstock_price" => "integer"
        "pfstock_total_price" => "integer"
        "current_price" => "integer"
      }
    }

    json {
      source => "stockDoc"
      target => "stockDoc"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "stocknote_pfstock"
    document_id => "%{id}"
    retry_on_conflict => 3
  }
}
